@model CatalogPagingFilteringModel.SpecificationFilterModel

@{
    var notFilteredItemsGroups = Model.NotFilteredItems.GroupBy(x => x.SpecificationAttributeName);
    var alreadyFilteredItemsGroups = Model.AlreadyFilteredItems.GroupBy(x => x.SpecificationAttributeName);
}
@if (Model.Enabled)
{
    <div class="product-filters product-spec-filter well">
        <div class="filter-title">
            <i class="fa fa-play-circle fa-5" aria-hidden="true"></i>
            <strong>@T("Filtering.SpecificationFilter")</strong>
        </div>
        <div class="filter-content">
            @if (Model.NotFilteredItems.Count > 0)
            {
                <div class="available-items">
                    @foreach (var group in notFilteredItemsGroups)
                    {
                        var groupList = group.ToList();

                        <ul class="nav nav-list @(groupList.Any(x => !string.IsNullOrEmpty(x.SpecificationAttributeOptionColorRgb)) ? "product-spec-color" : null )">
                            <li class="title">
                                <strong>@groupList[0].SpecificationAttributeName</strong>
                            </li>
                            @foreach (var spec in groupList)
                            {
                                <li class="item @(!string.IsNullOrEmpty(spec.SpecificationAttributeOptionColorRgb) ? "color-item" : null)">
                                    <a href="@spec.FilterUrl">
                                        @if (string.IsNullOrEmpty(spec.SpecificationAttributeOptionColorRgb))
                                        {
                                            <i class="fa fa-play fa-3" aria-hidden="true"></i>@spec.SpecificationAttributeOptionName
                                        }
                                        else
                                        {
                                            <div class="color-squares">
                                                <span class="color-container" title="@spec.SpecificationAttributeOptionName">
                                                    <span class="color" style="background-color: @(spec.SpecificationAttributeOptionColorRgb);">&nbsp;</span>
                                                </span>
                                            </div>
                                        }
                                    </a>
                                </li>
                            }
                        </ul>
                    }
                </div>
            }
            @if (Model.AlreadyFilteredItems.Count > 0)
            {
                <div class="already-filtered-items">
                    <div class="filter-title">
                        <strong>@T("Filtering.SpecificationFilter.CurrentlyFilteredBy")</strong> 
                    </div>
                    @foreach (var group in alreadyFilteredItemsGroups)
                    {
                        <div class="item">
                            <strong>@group.First().SpecificationAttributeName</strong>: 
                            @group.ToList().Aggregate(string.Empty, (current, next) =>
                                $"{(string.IsNullOrEmpty(current) ? string.Empty : $"{current} {T("Filtering.SpecificationFilter.Separator")}")}{next.SpecificationAttributeOptionName}")
                        </div>
                    }
                </div>
                <div class="remove-filter">
                    <a href="@Model.RemoveFilterUrl">@T("Filtering.SpecificationFilter.Remove")</a>
                </div>
            }
        </div>
    </div>
}