@model CustomerOrderListModel
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
    //page class
    Html.AppendPageCssClassParts("html-account-page");
    Html.AppendPageCssClassParts("html-order-list-page");
}

@section left
{
    @await Component.InvokeAsync("CustomerNavigation", new { selectedTabId = CustomerNavigationEnum.Orders })
}
<div class="page account-page order-list-page">
    <div class="page-title panel-heading">
        <h1>@T("Account.MyAccount") - @T("Account.CustomerOrders")</h1>
    </div>
    <div class="page-body">
        @if (Model.RecurringOrders.Count > 0)
        {
            <div class="section recurring-payments">
                <div class="title">
                    <strong>@T("Account.CustomerOrders.RecurringOrders")</strong>
                </div>
                <form asp-route="CustomerOrders" method="post">
                    @{
                        var canRetryRecurringOrders = Model.RecurringOrders.Any(recurring => recurring.CanRetryLastPayment);
                    }
                    <div class="recurring-payments-box">
                        <div class="panel panel-default">
                            <table class="table table-bordered">
                                <colgroup>
                                    <col />
                                    <col />
                                    <col />
                                    <col />
                                    <col />
                                    <col />
                                    @if (canRetryRecurringOrders)
                                    {
                                    <col />
                                    }
                                    <col />
                                </colgroup>
                                <thead>
                                    <tr>
                                        <th class="a-center start-date">
                                            @T("Account.CustomerOrders.RecurringOrders.StartDate")
                                        </th>
                                        <th class="a-center cycle-info">
                                            @T("Account.CustomerOrders.RecurringOrders.CycleInfo")
                                        </th>
                                        <th class="a-center next-payment">
                                            @T("Account.CustomerOrders.RecurringOrders.NextPayment")
                                        </th>
                                        <th class="a-center total-cycles">
                                            @T("Account.CustomerOrders.RecurringOrders.TotalCycles")
                                        </th>
                                        <th class="a-center cycles-remaining">
                                            @T("Account.CustomerOrders.RecurringOrders.CyclesRemaining")
                                        </th>
                                        <th class="a-center initial-order">
                                            @T("Account.CustomerOrders.RecurringOrders.InitialOrder")
                                        </th>
                                        @if (canRetryRecurringOrders)
                                        {
                                        <th class="retry">
                                            @T("Account.CustomerOrders.RecurringOrders.RetryLastPayment")
                                        </th>
                                        }
                                        <th class="a-center cancel">
                                            @T("Account.CustomerOrders.RecurringOrders.Cancel")
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.RecurringOrders)
                                    {
                                    <tr>
                                        <td class="a-center start-date">
                                            @item.StartDate
                                        </td>
                                        <td class="a-center cycle-info">
                                            @item.CycleInfo
                                        </td>
                                        <td class="a-center next-payment">
                                            @item.NextPayment
                                        </td>
                                        <td class="a-center total-cycles">
                                            @item.TotalCycles
                                        </td>
                                        <td class="a-center cycles-remaining">
                                            @item.CyclesRemaining
                                        </td>
                                        <td class="a-center initial-order">
                                            <a href="@Url.RouteUrl("OrderDetails", new { orderId = item.InitialOrderId })">@string.Format(T("Account.CustomerOrders.RecurringOrders.ViewInitialOrder").Text, item.InitialOrderNumber)</a>
                                        </td>
                                        @if (canRetryRecurringOrders)
                                            {
                                            <td class="retry">
                                                @if (item.CanRetryLastPayment)
                                                    {
                                                    <input type="submit" name="retryLastPayment_@(item.Id)" value="@T("Account.CustomerOrders.RecurringOrders.RetryLastPayment")" class="button-2 retry-recurring-order-button" />
                                                    }
                                            </td>
                                            }
                                        <td class="a-center cancel">
                                            @if (item.CanCancel)
                                                {
                                                <input type="submit" name="cancelRecurringPayment@(item.Id)" value="@T("Account.CustomerOrders.RecurringOrders.Cancel")" class="btn btn-default cancel-recurring-order-button" />
                                                }
                                        </td>
                                    </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </form>
            </div>
            if (Model.RecurringPaymentErrors.Any())
            {
                <div class="message-error">
                    <ul>
                        @foreach (var error in Model.RecurringPaymentErrors)
                        {
                            <li>@error</li>
                        }
                    </ul>
                </div>
            }
        }
        <div class="order-list row">
            @if (Model.Orders.Count > 0)
            {
                foreach (var order in Model.Orders)
                {
                    <div class="col-sm-6 col-md-6">
                        <div class="section order-item">
                            <div class="title">
                                <strong>@T("Account.CustomerOrders.OrderNumber"): @order.CustomOrderNumber</strong>
                            </div>
                            <div class="order-item-detail">
                                <ul class="nav">
                                    <li>
                                        @T("Account.CustomerOrders.OrderStatus"): <span class="order-status @order.OrderStatusEnum.ToString().ToLowerInvariant()">@order.OrderStatus</span>
                                    </li>
                                    <li>
                                        @T("Account.CustomerOrders.OrderDate"): @order.CreatedOn.ToString()
                                    </li>
                                    <li>
                                        @T("Account.CustomerOrders.OrderTotal"): @order.OrderTotal
                                    </li>
                                </ul>
                                <div class="buttons">
                                    @if (order.IsReturnRequestAllowed)
                                    {
                                        <input type="button" value="@T("Account.CustomerOrders.ReturnItems")" class="btn btn-default return-items-button" onclick="setLocation('@Url.RouteUrl("ReturnRequest", new { orderId = order.Id })')" />
                                    }
                                    <input type="button" value="@T("Account.CustomerOrders.OrderDetails")" class="btn btn-primary order-details-button" onclick="setLocation('@Url.RouteUrl("OrderDetails", new { orderId = order.Id })')" />
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                 <div class="no-data">
                    @T("Account.CustomerOrders.NoOrders")
                </div>
            }
        </div>
    </div>
</div>
