@model CompareProductsModel
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(T("PageTitle.CompareProducts").Text);
    //page class
    Html.AppendPageCssClassParts("html-compare-products-page");
}

@{
    var columnWidth = "";
    if (Model.Products.Count > 0)
    {
        columnWidth = Math.Round((decimal)(90M / Model.Products.Count), 0).ToString() + "%";
    }


    var specificationAttributes = new List<ProductSpecificationModel>();
    foreach (var product in Model.Products)
    {
        foreach (var attribute in product.SpecificationAttributeModels)
        {
            if (specificationAttributes.FirstOrDefault(sa => sa.SpecificationAttributeId == attribute.SpecificationAttributeId) == null)
            {
                specificationAttributes.Add(attribute);
            }
        }
    }
}
<div class="page compare-products-page">
    <div class="page-title panel-heading">
        <h1>@T("Products.Compare.Title")</h1>
    </div>
    <div class="page-body">
        @if (Model.Products.Count > 0)
        {
            <a href="#" onclick="setLocation('@Url.RouteUrl("ClearCompareList")')" class="clear-list btn btn-primary">@T("Products.Compare.Clear")</a>
            <div class="panel panel-default">
                <table class="compare-products-table table table-bordered table-striped table-responsive">
                    <tbody>
                        <tr class="overview">
                            <td>
                                &nbsp;
                            </td>
                            @foreach (var product in Model.Products)
                            {
                                <td style="width: @columnWidth;" class="a-center">
                                    <div>
                                        <p class="a-center">
                                            <input type="button" value="@T("Common.Remove")" title="@T("Common.Remove")" class="btn btn-default remove-button" onclick="setLocation('@Url.RouteUrl("RemoveProductFromCompareList", new { productId = product.Id })')" />
                                        </p>
                                        <p class="a-center">
                                            <a class="picture" href="@Url.RouteUrl("Product", new { SeName = product.SeName })"><img alt="@product.DefaultPictureModel.AlternateText" src="@product.DefaultPictureModel.ImageUrl" title="@product.DefaultPictureModel.Title" /></a>
                                        </p>
                                    </div>
                                </td>
                            }
                        </tr>
                        <tr class="product-name">
                            <td>
                                &nbsp;
                            </td>
                            @foreach (var product in Model.Products)
                            {
                                <td style="width: @columnWidth;" class="a-center">
                                    <a href="@Url.RouteUrl("Product", new { SeName = product.SeName })">@product.Name</a>
                                </td>
                            }
                        </tr>
                        <tr class="product-price">
                            <td>
                                @T("Products.Compare.Price")
                            </td>
                            @foreach (var product in Model.Products)
                            {
                                <td style="width: @columnWidth;" class="a-center">
                                    @product.ProductPrice.Price
                                </td>
                            }
                        </tr>
                        @if (Model.IncludeShortDescriptionInCompareProducts)
                        {
                            <tr class="short-description">
                                <td>
                                    @T("Products.Compare.ShortDescription")
                                </td>
                                @foreach (var product in Model.Products)
                                {
                                    <td style="width: @columnWidth;" class="a-left">
                                        @Html.Raw(product.ShortDescription)
                                    </td>
                                }
                            </tr>
                        }
                        @foreach (var specificationAttribute in specificationAttributes)
                        {
                            <tr class="specification">
                                <td>
                                    @specificationAttribute.SpecificationAttributeName
                            </td>
                            @foreach (var product in Model.Products)
                            {
                                var foundProductSpec = product.SpecificationAttributeModels.FirstOrDefault(psa => psa.SpecificationAttributeId == specificationAttribute.SpecificationAttributeId);
                                <td style="width: @columnWidth;" class="a-center">
                                    @if (foundProductSpec != null)
                                    {
                                        if (string.IsNullOrEmpty(foundProductSpec.ColorSquaresRgb))
                                        {
                                            @Html.Raw(foundProductSpec.ValueRaw)
                                        }
                                        else
                                        {
                                            <div class="color-squares">
                                                <span class="color-container" title="@Html.Raw(foundProductSpec.ValueRaw)">
                                                    <span class="color" style="background-color: @(foundProductSpec.ColorSquaresRgb);">&nbsp;</span>
                                                </span>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <text>&nbsp;</text>
                                    }
                                </td>
                            }
                        </tr>
                        }
                        @if (Model.IncludeFullDescriptionInCompareProducts)
                        {
                            <tr class="full-description">
                                <td>
                                    @T("Products.Compare.FullDescription")
                                </td>
                                @foreach (var product in Model.Products)
                                {
                                    <td style="width: @columnWidth;" class="a-left">
                                        @Html.Raw(product.FullDescription)
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="no-data">
                @T("Products.Compare.NoItems")
            </div>
        }
    </div>
</div>
