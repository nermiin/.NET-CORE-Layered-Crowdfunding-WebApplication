@model MiniShoppingCartModel

<div id="flyout-cart" class="flyout-main-wrapper">
    <div class="shopping-cart-link">
        <a href="@Url.RouteUrl("ShoppingCart")">
            <i class="fa fa-shopping-cart fa-4" aria-hidden="true"></i>
            @*<span class="cart-label">@T("ShoppingCart")</span>*@
            <span class="cart-qty">@T("ShoppingCart.HeaderQuantity", Model.TotalProducts) @*@T("admin.currentcarts.totalitems")*@</span>
        </a>
    </div>
    <div class="flyout-cart-wrapper" id="flyout-cart-wrapper">
        <div class="mini-shopping-cart">
            <div class="count">
                @if (Model.TotalProducts == 0)
                {
                    @T("ShoppingCart.Mini.NoItems")
                }
                else
                {
                    @Html.Raw(string.Format(T("ShoppingCart.Mini.ItemsText").Text, $"<a href=\"{Url.RouteUrl("ShoppingCart")}\">{string.Format(T("ShoppingCart.Mini.Items").Text, Model.TotalProducts)}</a>"))
                }
            </div>
            @if (Model.TotalProducts > 0)
            {
                <div class="items">
                    @for (var i = 0; i < Model.Items.Count; i++)
                    {
                        var item = Model.Items[i];
                        <div class="item @(i == 0 ? "first" : null)">
                            @if (Model.ShowProductImages)
                            {
                                <div class="picture">
                                    <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" title="@item.Picture.Title">
                                        <img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" />
                                    </a>
                                </div>
                            }
                            <div class="product">
                                <div class="name">
                                    <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })">@item.ProductName</a>
                                </div>
                                @if (!string.IsNullOrEmpty(item.AttributeInfo))
                                {
                                    <div class="attributes">
                                        @Html.Raw(item.AttributeInfo)
                                    </div>
                                }
                                <div class="quantity"><span>@item.Quantity</span></div>
                                <div class="price"><span>@item.UnitPrice</span></div>
                            </div>
                        </div>
                    }
                </div>
                <div class="totals">@T("ShoppingCart.Totals.SubTotal"): <strong>@Model.SubTotal</strong></div>
                <div class="buttons">
                    @if (Model.DisplayShoppingCartButton)
                    {
                        <input type="button" value="@T("ShoppingCart.Mini.ViewCart")" class="btn btn-primary cart-button" onclick="setLocation('@(Url.RouteUrl("ShoppingCart"))')" />

                    }
                    @if (Model.DisplayCheckoutButton)
                    {
                        var checkoutUrl = "";
                        if (Model.AnonymousCheckoutAllowed && Model.CurrentCustomerIsGuest)
                        {
                            checkoutUrl = Url.RouteUrl("LoginCheckoutAsGuest", new { returnUrl = Url.RouteUrl("ShoppingCart") });
                        }
                        else
                        {
                            checkoutUrl = Url.RouteUrl("Checkout");
                        }
                        <input type="button" value="@T("Checkout.Button")" class="btn btn-primary checkout-button" onclick="setLocation('@checkoutUrl')" />
                    }
                </div>
            }
        </div>
    </div>
</div>
