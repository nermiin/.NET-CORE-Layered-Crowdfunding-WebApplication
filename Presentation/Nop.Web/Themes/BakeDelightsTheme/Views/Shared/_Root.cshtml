@{
    Layout = "_Root.Head";
}
@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.BodyStartHtmlTagAfter })
@await Html.PartialAsync("_Notifications")
<div class="master-wrapper-page">
    @await Html.PartialAsync("_JavaScriptDisabledWarning")
    @await Html.PartialAsync("_OldInternetExplorerWarning")
    <div class="admin-header-link">
        <ul>
            @await Component.InvokeAsync("AdminHeaderLinks")
        </ul>
    </div>
    @await Html.PartialAsync("_Header")
    <script asp-location="Footer">
        var localized_data = {
            AjaxCartFailure: "@T("AjaxCart.Failure")"
        };
        AjaxCart.init(false, '.header-links .cart-qty', '.header-links .wishlist-qty', '#flyout-cart', localized_data);
    </script>
    <div class="header-menu">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    @await Component.InvokeAsync("TopMenu")
                </div>
            </div>
        </div>
    </div>
    <div class="master-wrapper-content">
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageTop })
        @if (IsSectionDefined("Breadcrumb"))
        {
            @RenderSection("Breadcrumb")
        }
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ContentBefore })
                </div>
            </div>
            @*ajax loading window*@
            <div class="ajax-loading-block-window" style="display: none">
                <div class="loading-image">
                </div>
            </div>
        </div>
        <div class="master-column-wrapper">
            <div class="container">
                <div class="row">
                    @RenderBody()
                </div>
            </div>
        </div>
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ContentAfter })
    </div>
    @await Component.InvokeAsync("Footer")
    @* Use this content for back to top page scrolling *@
    <div id="backTop"></div>
</div>
@await Component.InvokeAsync("EuCookieLaw")
@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.BodyEndHtmlTagBefore })

